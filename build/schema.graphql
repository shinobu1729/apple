type Burn @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  bottomTick: Int! # int24
  topTick: Int! # int24
  liquidityAmount: BigInt! # uint128
  amount0: BigInt! # uint256
  amount1: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Collect @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  recipient: Bytes! # address
  bottomTick: Int! # int24
  topTick: Int! # int24
  amount0: BigInt! # uint128
  amount1: BigInt! # uint128
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerCollects @entity {
  id: Bytes!
  owner: Bytes! # address
  collects: [Bytes!]! # List of Collect entity IDs
}

type CommunityFee @entity(immutable: true) {
  id: Bytes!
  communityFee0New: Int! # uint8
  communityFee1New: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Fee @entity(immutable: true) {
  id: Bytes!
  feeZto: Int! # uint16
  feeOtz: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Flash @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  recipient: Bytes! # address
  amount0: BigInt! # uint256
  amount1: BigInt! # uint256
  paid0: BigInt! # uint256
  paid1: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Incentive @entity(immutable: true) {
  id: Bytes!
  virtualPoolAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialize @entity(immutable: true) {
  id: Bytes!
  price: BigInt! # uint160
  tick: Int! # int24
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LiquidityCooldown @entity(immutable: true) {
  id: Bytes!
  liquidityCooldown: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Mint @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  owner: Bytes! # address
  bottomTick: Int! # int24
  topTick: Int! # int24
  liquidityAmount: BigInt! # uint128
  amount0: BigInt! # uint256
  amount1: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Swap @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  recipient: Bytes! # address
  amount0: BigInt! # int256
  amount1: BigInt! # int256
  price: BigInt! # uint160
  liquidity: BigInt! # uint128
  tick: Int! # int24
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TickSpacing @entity(immutable: true) {
  id: Bytes!
  newTickSpacing: Int! # int24
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Action @entity(immutable: true) {
  id: Bytes!
  actionType: Int! # uint8
  caller: Bytes! # address
  collateralAmount0: BigInt! # uint256
  debtAmount1: BigInt! # uint256
  liquidityAmount0: BigInt! # uint256
  liquidityAmount1: BigInt! # uint256
  accruedFees0: BigInt! # uint256
  accruedFees1: BigInt! # uint256
  vaultAmount0: BigInt! # uint256
  vaultAmount1: BigInt! # uint256
  totalAssets: BigInt! # uint256
  totalSupply: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  spender: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BurnAndCollectFees @entity(immutable: true) {
  id: Bytes!
  burn0: BigInt! # uint256
  burn1: BigInt! # uint256
  fee0: BigInt! # uint256
  fee1: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
